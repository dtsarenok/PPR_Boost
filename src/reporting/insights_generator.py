# src/reporting/insights_generator.py
import numpy as np

class InsightsGenerator:
    def generate_recommendations(self, tender_data: dict, probability: float):
        recommendations = []


        if probability >= 0.8:
            recommendations.append("üèÜ –í—ã—Å–æ–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —É—Å–ø–µ—Ö–∞! –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –∏ –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω –ü–ü–†.")
        elif probability >= 0.6:
            recommendations.append("üëç –•–æ—Ä–æ—à–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –∏ –ø–æ–¥—á–µ—Ä–∫–Ω–∏—Ç–µ –Ω–∞—à–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞.")
        elif probability >= 0.4:
            recommendations.append("ü§î –°—Ä–µ–¥–Ω–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ –≥–ª—É–±–æ–∫–∞—è –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.")
        else:
            recommendations.append("üìâ –ù–∏–∑–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –£—á–∞—Å—Ç–∏–µ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è, –µ—Å–ª–∏ –Ω–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏—á–∏–Ω –∏–ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –¥–ª—è –Ω–∞—Å.")

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ù–ú–¶–ö
        nmck = tender_data.get('nmck', 0)
        if nmck > 5000000:
            recommendations.append(f"üí∞ –í—ã—Å–æ–∫–∏–π –ù–ú–¶–ö ({nmck:,.0f} —Ä—É–±.). –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏–ª–∏ –ø–∞–∫–µ—Ç —É—Å–ª—É–≥.")
        elif nmck < 500000 and nmck > 0:
            recommendations.append(f"üí∏ –ù–∏–∑–∫–∏–π –ù–ú–¶–ö ({nmck:,.0f} —Ä—É–±.). –û—Ü–µ–Ω–∏—Ç–µ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–¥–µ–ª–∫–∏.")

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ä–æ–∫–∞–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
        duration = tender_data.get('contract_duration_days')
        if duration and duration > 365 * 1.5: # –ë–æ–ª–µ–µ 1.5 –ª–µ—Ç
            recommendations.append(f"üìÖ –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç (–æ–∫–æ–ª–æ {round(duration/365, 1)} –ª–µ—Ç). –û–±–µ—Å–ø–µ—á–∏—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π.")
        elif duration and duration < 90: # –ú–µ–Ω–µ–µ 3 –º–µ—Å—è—Ü–µ–≤
             recommendations.append(f"‚è±Ô∏è –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç ({duration} –¥–Ω–µ–π). –¢—Ä–µ–±—É–µ—Ç –±—ã—Å—Ç—Ä–æ–π —Ä–µ–∞–∫—Ü–∏–∏ –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏.")

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å–ª–æ–≤–∏—è–º –æ–ø–ª–∞—Ç—ã
        if tender_data.get('payment_type_prepayment') and tender_data.get('prepayment_percentage', 0) > 0:
            prepayment_percent = tender_data.get('prepayment_percentage', 0)
            recommendations.append(f"üí≥ –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ ({prepayment_percent}%). –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∫—ç—à-—Ñ–ª–æ—É –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤.")
        elif tender_data.get('payment_type_postpayment') and tender_data.get('payment_deferral_days', 0) > 0:
            deferral_days = tender_data.get('payment_deferral_days', 0)
            recommendations.append(f"üóìÔ∏è –ü–æ—Å—Ç–æ–ø–ª–∞—Ç–∞ –¥–æ {deferral_days} –¥–Ω–µ–π. –û—Ü–µ–Ω–∏—Ç–µ —Ä–∏—Å–∫–∏ –∑–∞–¥–µ—Ä–∂–µ–∫ –ø–ª–∞—Ç–µ–∂–µ–π –∏ –∫—Ä–µ–¥–∏—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑—á–∏–∫–∞.")
        else:
            recommendations.append("üí∞ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã. –£—Ç–æ—á–Ω–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∏—Å–∫–æ–≤.")

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–µ—Ç–∏ –ê–ó–°
        required_azs = tender_data.get('required_azs_networks', [])
        if required_azs and "–ª—é–±–∞—è" not in required_azs:
            recommendations.append(f"‚õΩ –¢–µ–Ω–¥–µ—Ä —Ç—Ä–µ–±—É–µ—Ç –Ω–∞–ª–∏—á–∏—è –ê–ó–° —Å–µ—Ç–µ–π: {', '.join(required_azs)}. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–ª–Ω–æ–º –ø–æ–∫—Ä—ã—Ç–∏–∏ –ü–ü–† –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö.")
        else:
            recommendations.append("üåç –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–µ—Ç–∏ –ê–ó–° –Ω–µ —É–∫–∞–∑–∞–Ω—ã —è–≤–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –µ—Å—Ç—å –≥–∏–±–∫–æ—Å—Ç—å –≤ –≤—ã–±–æ—Ä–µ.")

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–ø–∞–Ω–∏–∏
        company_revenue_log = tender_data.get('company_revenue_log', 0)
        if company_revenue_log > np.log1p(10**9):
             recommendations.append("üè¢ –ó–∞–∫–∞–∑—á–∏–∫ - –∫—Ä—É–ø–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å –≤—ã—Å–æ–∫–∏–º –æ–±–æ—Ä–æ—Ç–æ–º, —á—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫–∏ –Ω–µ–ø–ª–∞—Ç–µ–∂–µ–π.")
        elif tender_data.get('company_is_sme', False):
             recommendations.append("‚ùó –ó–∞–∫–∞–∑—á–∏–∫ —è–≤–ª—è–µ—Ç—Å—è —Å—É–±—ä–µ–∫—Ç–æ–º –ú–°–ü. –°–æ–≥–ª–∞—Å–Ω–æ –ø–æ–ª–∏—Ç–∏–∫–µ, –º—ã –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º —Å –ú–°–ü.")


        # –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        if len(recommendations) == 0:
            recommendations.append("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–µ—Ç. –¢–µ–Ω–¥–µ—Ä —Ç—Ä–µ–±—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞.")

        return "\n".join(recommendations)